// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: domain/connection/connection.proto

package connection

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/superwhys/remoteX/domain/node"
	github_com_superwhys_remoteX_pkg_common "github.com/superwhys/remoteX/pkg/common"
	_ "github.com/superwhys/remoteX/pkg/proto/ext"
	protocol "github.com/superwhys/remoteX/pkg/protocol"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Connection struct {
	ConnectionId  string                                         `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connectionId" yaml:"-"`
	NodeId        github_com_superwhys_remoteX_pkg_common.NodeID `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3,customtype=github.com/superwhys/remoteX/pkg/common.NodeID" json:"node_id" yaml:"-"`
	LocalAddress  string                                         `protobuf:"bytes,3,opt,name=local_address,json=localAddress,proto3" json:"localAddress" yaml:"-"`
	RemoteAddress string                                         `protobuf:"bytes,4,opt,name=remote_address,json=remoteAddress,proto3" json:"remoteAddress" yaml:"-"`
	Protocol      protocol.ConnectionProtocol                    `protobuf:"varint,5,opt,name=protocol,proto3,enum=protocol.ConnectionProtocol" json:"protocol" yaml:"-"`
	ConnectType   protocol.ConnectionType                        `protobuf:"varint,6,opt,name=connect_type,json=connectType,proto3,enum=protocol.ConnectionType" json:"connectType" yaml:"-"`
	Status        protocol.ConnectionStatus                      `protobuf:"varint,7,opt,name=status,proto3,enum=protocol.ConnectionStatus" json:"status" yaml:"-"`
	StartTime     int64                                          `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"startTime" yaml:"-"`
	LastHeartbeat int64                                          `protobuf:"varint,9,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"lastHeartbeat" yaml:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8286653a4531df, []int{0}
}
func (m *Connection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *Connection) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *Connection) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *Connection) GetProtocol() protocol.ConnectionProtocol {
	if m != nil {
		return m.Protocol
	}
	return protocol.ConnectionProtocolTcp
}

func (m *Connection) GetConnectType() protocol.ConnectionType {
	if m != nil {
		return m.ConnectType
	}
	return protocol.ConnectionTypeServer
}

func (m *Connection) GetStatus() protocol.ConnectionStatus {
	if m != nil {
		return m.Status
	}
	return protocol.ConnectionStatusBeforeAuth
}

func (m *Connection) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Connection) GetLastHeartbeat() int64 {
	if m != nil {
		return m.LastHeartbeat
	}
	return 0
}

func init() {
	proto.RegisterType((*Connection)(nil), "connection.Connection")
}

func init() {
	proto.RegisterFile("domain/connection/connection.proto", fileDescriptor_7c8286653a4531df)
}

var fileDescriptor_7c8286653a4531df = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x3f, 0x6f, 0xd3, 0x40,
	0x18, 0xc6, 0x7d, 0x94, 0xba, 0xc9, 0x41, 0x3b, 0x78, 0xa8, 0x8e, 0xb4, 0xf8, 0xa2, 0x28, 0x43,
	0x16, 0x6c, 0x09, 0x16, 0xc4, 0x56, 0xd3, 0x81, 0x22, 0x84, 0x50, 0xe8, 0x50, 0xb1, 0x58, 0x17,
	0xfb, 0xd4, 0x58, 0xd8, 0x3e, 0xcb, 0xbe, 0x08, 0xf2, 0x0d, 0x60, 0x43, 0x7c, 0x02, 0x3e, 0x4e,
	0x37, 0x3c, 0x22, 0x86, 0x93, 0x48, 0x36, 0x8f, 0xf9, 0x04, 0xc8, 0xe7, 0xbf, 0x27, 0x22, 0x16,
	0xfb, 0xd5, 0xf3, 0xbc, 0xef, 0xcf, 0xef, 0x3d, 0xb6, 0xe1, 0xc4, 0x67, 0x11, 0x09, 0x62, 0xdb,
	0x63, 0x71, 0x4c, 0x3d, 0x1e, 0xb0, 0x7e, 0x69, 0x25, 0x29, 0xe3, 0xcc, 0x80, 0x9d, 0x32, 0x3a,
	0xad, 0xfb, 0x63, 0xe6, 0x53, 0x79, 0xa9, 0x7a, 0x46, 0x43, 0xfa, 0x99, 0xd7, 0xe5, 0x59, 0xf2,
	0xf1, 0xd6, 0x96, 0xa5, 0xc7, 0xc2, 0xb6, 0xa8, 0xcc, 0x89, 0x38, 0x84, 0xf0, 0x65, 0x8b, 0x33,
	0x2e, 0xe0, 0x71, 0x07, 0x77, 0x03, 0x1f, 0x81, 0x31, 0x98, 0x0d, 0x9d, 0xf3, 0x42, 0xe0, 0x87,
	0x9d, 0x71, 0xe5, 0xef, 0x04, 0x1e, 0xac, 0x49, 0x14, 0xbe, 0x98, 0x3c, 0x99, 0xcc, 0x15, 0xc7,
	0xf8, 0x0a, 0xe0, 0x51, 0xb9, 0x48, 0x39, 0x7d, 0x4f, 0x4e, 0x27, 0x77, 0x02, 0x6b, 0xbf, 0x05,
	0xb6, 0x6e, 0x03, 0xbe, 0x5c, 0x2d, 0x2c, 0x8f, 0x45, 0x76, 0xb6, 0x4a, 0x68, 0xfa, 0x69, 0xb9,
	0xce, 0xec, 0x94, 0x46, 0x8c, 0xd3, 0x1b, 0xbb, 0xdc, 0xd2, 0x63, 0x51, 0xc4, 0x62, 0xeb, 0x2d,
	0xf3, 0xe9, 0xd5, 0xe5, 0x46, 0x60, 0x5d, 0x56, 0x7e, 0x21, 0x70, 0x83, 0xec, 0x3f, 0x78, 0xf7,
	0x73, 0xda, 0xc8, 0x5f, 0xf2, 0x29, 0xf8, 0x9e, 0x4f, 0xeb, 0xfe, 0xb9, 0x1e, 0xcb, 0x7b, 0x79,
	0x9c, 0x90, 0x79, 0x24, 0x74, 0x89, 0xef, 0xa7, 0x34, 0xcb, 0xd0, 0x41, 0x77, 0x1c, 0x69, 0x5c,
	0x54, 0xba, 0x7a, 0x9c, 0xbe, 0x63, 0x5c, 0xc2, 0x93, 0x6a, 0xc3, 0x96, 0x71, 0x5f, 0x32, 0x1e,
	0x17, 0x02, 0x1f, 0x57, 0xce, 0x3e, 0x88, 0x6a, 0x19, 0x73, 0x38, 0x68, 0x82, 0x47, 0x87, 0x63,
	0x30, 0x3b, 0x79, 0x7a, 0x6e, 0xb5, 0x6f, 0xa2, 0xcb, 0xff, 0x5d, 0x2d, 0x39, 0xa8, 0x10, 0xb8,
	0x9d, 0x50, 0xc0, 0xad, 0x6a, 0xdc, 0xc0, 0x26, 0x78, 0x97, 0xaf, 0x13, 0x8a, 0x74, 0xc9, 0x45,
	0xfb, 0xb8, 0xd7, 0xeb, 0x84, 0x3a, 0x67, 0x85, 0xc0, 0x0f, 0xea, 0x89, 0x52, 0x50, 0xb0, 0x7d,
	0xc3, 0x78, 0x0d, 0xf5, 0x8c, 0x13, 0xbe, 0xca, 0xd0, 0x91, 0x64, 0x8e, 0xf6, 0x31, 0xdf, 0xcb,
	0x0e, 0xe7, 0xb4, 0x10, 0xb8, 0xee, 0x56, 0x80, 0xb5, 0x66, 0x3c, 0x87, 0x30, 0xe3, 0x24, 0xe5,
	0x2e, 0x0f, 0x22, 0x8a, 0x06, 0x63, 0x30, 0x3b, 0x70, 0x1e, 0x15, 0x02, 0x0f, 0xa5, 0x7a, 0x1d,
	0x44, 0xea, 0x1e, 0x9d, 0x5c, 0x26, 0x1f, 0x92, 0x8c, 0xbb, 0x4b, 0x4a, 0x52, 0xbe, 0xa0, 0x84,
	0xa3, 0xa1, 0x9c, 0x96, 0xc9, 0x97, 0xce, 0xab, 0xc6, 0x50, 0x93, 0x57, 0x2c, 0xe7, 0x4d, 0xfe,
	0xc7, 0xd4, 0xee, 0x36, 0x26, 0xc8, 0x37, 0x26, 0xf8, 0xb6, 0x35, 0xb5, 0x1f, 0x5b, 0x13, 0xe4,
	0x5b, 0x53, 0xfb, 0xb5, 0x35, 0xb5, 0x0f, 0xff, 0xff, 0x24, 0xff, 0xf9, 0x17, 0x17, 0xba, 0x0c,
	0xe2, 0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x37, 0x8d, 0xed, 0xa7, 0x03, 0x00, 0x00,
}

func (m *Connection) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Connection) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Connection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastHeartbeat != 0 {
		i = encodeVarintConnection(dAtA, i, uint64(m.LastHeartbeat))
		i--
		dAtA[i] = 0x48
	}
	if m.StartTime != 0 {
		i = encodeVarintConnection(dAtA, i, uint64(m.StartTime))
		i--
		dAtA[i] = 0x40
	}
	if m.Status != 0 {
		i = encodeVarintConnection(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x38
	}
	if m.ConnectType != 0 {
		i = encodeVarintConnection(dAtA, i, uint64(m.ConnectType))
		i--
		dAtA[i] = 0x30
	}
	if m.Protocol != 0 {
		i = encodeVarintConnection(dAtA, i, uint64(m.Protocol))
		i--
		dAtA[i] = 0x28
	}
	if len(m.RemoteAddress) > 0 {
		i -= len(m.RemoteAddress)
		copy(dAtA[i:], m.RemoteAddress)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.RemoteAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalAddress) > 0 {
		i -= len(m.LocalAddress)
		copy(dAtA[i:], m.LocalAddress)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.LocalAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NodeId) > 0 {
		i -= len(m.NodeId)
		copy(dAtA[i:], m.NodeId)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.NodeId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ConnectionId) > 0 {
		i -= len(m.ConnectionId)
		copy(dAtA[i:], m.ConnectionId)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.ConnectionId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintConnection(dAtA []byte, offset int, v uint64) int {
	offset -= sovConnection(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Connection) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConnectionId)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	l = len(m.NodeId)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	l = len(m.LocalAddress)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	l = len(m.RemoteAddress)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	if m.Protocol != 0 {
		n += 1 + sovConnection(uint64(m.Protocol))
	}
	if m.ConnectType != 0 {
		n += 1 + sovConnection(uint64(m.ConnectType))
	}
	if m.Status != 0 {
		n += 1 + sovConnection(uint64(m.Status))
	}
	if m.StartTime != 0 {
		n += 1 + sovConnection(uint64(m.StartTime))
	}
	if m.LastHeartbeat != 0 {
		n += 1 + sovConnection(uint64(m.LastHeartbeat))
	}
	return n
}

func sovConnection(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConnection(x uint64) (n int) {
	return sovConnection(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Connection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Connection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Connection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeId = github_com_superwhys_remoteX_pkg_common.NodeID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoteAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			m.Protocol = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Protocol |= protocol.ConnectionProtocol(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectType", wireType)
			}
			m.ConnectType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnectType |= protocol.ConnectionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= protocol.ConnectionStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			m.StartTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastHeartbeat", wireType)
			}
			m.LastHeartbeat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastHeartbeat |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConnection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConnection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConnection(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConnection
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConnection
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConnection
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConnection        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConnection          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConnection = fmt.Errorf("proto: unexpected end of group")
)
